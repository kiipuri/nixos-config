# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/72ccc854-d5d7-4af0-a366-01b92688d36f";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/97C0-25A3";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  fileSystems."/mnt/hdd2" = {
    device = "/dev/disk/by-uuid/ad1aa809-bce5-4e05-8611-62d1cdfd426f";
    fsType = "ext4";
  };

  fileSystems."/mnt/artix" = {
    device = "/dev/disk/by-uuid/bfea920e-447f-4f10-bb4a-ef3e0abfe30d";
    fsType = "btrfs";
  };

  fileSystems."/mnt/hdd" = {
    device = "/dev/disk/by-uuid/ace0e3bf-0d7e-4026-b79a-df974d9f9a52";
    fsType = "ext4";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/7f7e3288-ded6-44e4-820f-766caa8cc7ef";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.virbr0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
