#!/usr/bin/env nix-shell
#! nix-shell -i bash --pure
#! nix-shell -p networkmanager coreutils socat bc netcat playerctl pamixer curl gawk gnugrep jq

current_hour=$(date +%H)

get_weather_data() {
    city=$(cat /run/user/1000/secrets/city)
    coordinates_path=$HOME/.cache/coordinates
    [ ! -f "$coordinates_path" ] &&
        coordinates=$(curl -s "https://geocoding-api.open-meteo.com/v1/search?name=${city}&count=1" -o "$coordinates_path")

    coordinates=$(jq '.results .[0] | .latitude, .longitude' "$coordinates_path")
    weather_data_path=$HOME/.cache/weather_data

    if [ ! -f "$weather_data_path" ] || [ "$(date -d "$(jq -r ".hourly .time [0]" "$weather_data_path")" +%Y-%m-%d)" != "$(date +%Y-%m-%d)" ]; then
        curl -s "https://api.open-meteo.com/v1/forecast?latitude=$(echo "$coordinates" | sed '1q;d')&longitude=$(echo "$coordinates" | sed '2q;d')&hourly=temperature_2m,precipitation_probability,precipitation,weather_code,is_day&start_date=$(date +%Y-%m-%d)&end_date=$(date +%Y-%m-%d)" -o "$weather_data_path"
    fi

    cat "$weather_data_path"
}

weather_data=$(get_weather_data)

get_temperature() {
    temperature=$(echo "$weather_data" | jq -r "[(.hourly .temperature_2m [$current_hour] | floor), .hourly_units .temperature_2m] | join(\"\")")
    echo "$temperature"
}

get_precipitation() {
    precipitation=$(echo "$weather_data" | jq -r "[(.hourly .precipitation [$current_hour]), .hourly_units .precipitation] | join(\"\")")
    echo "$precipitation"
}

get_precipitation_probability() {
    precipitation_probability=$(echo "$weather_data" | jq -r "[(.hourly .precipitation_probability [$current_hour]), .hourly_units .precipitation_probability] | join(\"\")")
    echo "$precipitation_probability"
}

weather_description_path=$HOME/.cache/weather_description
day_or_night=$([ "$(echo "$weather_data" | jq -r "(.hourly .is_day [$current_hour])")" ] && echo "day" || echo "night")
weather_code=$(echo "$weather_data" | jq -r "(.hourly .weather_code [$current_hour])")
get_weather_description() {
    [ ! -f "$weather_description_path" ] &&
        curl -s "https://gist.githubusercontent.com/stellasphere/9490c195ed2b53c707087c8c2db4ec0c/raw/76b0cb0ef0bfd8a2ec988aa54e30ecd1b483495d/descriptions.json" -o "$weather_description_path"

    jq -r '."'"$weather_code"'" ."'"$day_or_night"'" .description' "$weather_description_path"
}

get_weather_icon() {
    weather_image_url=$(jq -r '."'"$weather_code"'" ."'"$day_or_night"'" .image' "$weather_description_path")
    weather_icon_path="$HOME/.cache/weather-icons/${weather_image_url##*/}"
    [ ! -f "$weather_icon_path" ] && curl -s "$weather_image_url" --create-dirs -o "$weather_icon_path"
    echo "$weather_icon_path"
}

get_widget() {
    widget="(box :orientation 'h' :space-evenly false :class '' \
        (box :halign 'start'
             :class 'music-icon'
             :style 'background-image: url(\"$(get_weather_icon)\"); background-size: cover;'
             :width 100
             :height 100)
        (box :class 'info' :orientation 'v' :space-evenly false :class 'mg-left mg-right-half' :valign 'center' \
          (label :halign 'start' :text 'Temperature:') \
          (label :halign 'start' :text 'Precipitation:') \
          (label :halign 'start' :text 'Description:')) \
        (box :class 'info mg-right-half' :orientation 'v' :space-evenly false :valign 'center' \
          (label :halign 'start' :text '$(get_temperature)') \
          (label :halign 'start' :text '$(get_precipitation) $(get_precipitation_probability)') \
          (label :halign 'start' :text '$(get_weather_description)')))"

    echo "$widget"
}

get_widget
