# This is your home-manager configuration file
# Use this to configure your home environment (it replaces ~/.config/nixpkgs/home.nix)
{
  inputs,
  lib,
  config,
  pkgs,
  helpers,
  ...
}: {
  # You can import other home-manager modules here

  imports = [
    # If you want to use home-manager modules from other flakes (such as nix-colors):
    inputs.nix-colors.homeManagerModule
    inputs.mynvim.inputs.nixvim.homeManagerModules.nixvim

    # You can also split up your configuration and import pieces of it here:
    ./nvim
  ];

  home.packages = with pkgs; [
    #(callPackage ./derivatives/screenshot.nix {})
    #(callPackage ./derivatives/audiorec.nix {})
    #(callPackage ./derivatives/rofi-shutdown.nix {})
    #(callPackage ./derivatives/netuse.nix {})

    dconf
    gucharmap
    librewolf
    neofetch
    lazygit
    discord
    mpv
    keepassxc
    anki
    (builtins.getFlake "github:Duckonaut/split-monitor-workspaces/b719a7b73199d2b0e24694183daa3714c4cced44").packages.${system}.split-monitor-workspaces
    (builtins.getFlake "github:sopa0/hyprsome/9636be05ef20fbe473709cc3913b5bbf735eb4f3").packages.${system}.default
  ];

  programs.nixvim.enable = true;
  # colorScheme = inputs.nix-colors.colorSchemes.gruvbox-dark-hard;
  # colorScheme = inputs.nix-colors.colorSchemes.dracula;
  # colorScheme = inputs.nix-colors.colorSchemes.tokyo-night-storm;
  colorScheme = inputs.nix-colors.colorSchemes.tokyo-night-dark;
  # colorScheme = inputs.nix-colors.colorSchemes.harmonic16-dark;
  # colorScheme = inputs.nix-colors.colorSchemes.catppuccin-mocha;

  # programs.waybar.enable = true;
  # programs.waybar.package = inputs.hyprland.packages.${pkgs.system}.waybar-hyprland;
  wayland.windowManager.hyprland = {
    enable = true;
    enableNvidiaPatches = true;
    systemdIntegration = true;
    recommendedEnvironment = true;
    plugins = with pkgs; [
      # (builtins.getFlake "github:Duckonaut/split-monitor-workspaces/b719a7b73199d2b0e24694183daa3714c4cced44").packages.${system}.split-monitor-workspaces
    ];
    extraConfig = ''
      #
      # Please note not all available settings / options are set here.
      # For a full list, see the wiki
      #

      autogenerated = 0 # remove this line to remove the warning

      # See https://wiki.hyprland.org/Configuring/Monitors/
      monitor=DP-3,2560x1440@143.912003,0x0,1
      monitor=HDMI-A-2,preferred,2560x0,1

      workspace=1,monitor:HDMI-A-2
      workspace=2,monitor:HDMI-A-2
      workspace=3,monitor:HDMI-A-2
      workspace=4,monitor:HDMI-A-2
      workspace=5,monitor:HDMI-A-2
      workspace=6,monitor:HDMI-A-2
      workspace=7,monitor:HDMI-A-2
      workspace=8,monitor:HDMI-A-2
      workspace=9,monitor:HDMI-A-2

      workspace=11,monitor:DP-3
      workspace=12,monitor:DP-3
      workspace=13,monitor:DP-3
      workspace=14,monitor:DP-3
      workspace=15,monitor:DP-3
      workspace=16,monitor:DP-3
      workspace=17,monitor:DP-3
      workspace=18,monitor:DP-3
      workspace=19,monitor:DP-3

      # See https://wiki.hyprland.org/Configuring/Keywords/ for more

      # Execute your favorite apps at launch
      # exec-once = waybar & hyprpaper & firefox
      exec-once = waybar

      # Source a file (multi-file configs)
      # source = ~/.config/hypr/myColors.conf

      # Some default env vars.
      env = XCURSOR_SIZE,24

      # For all categories, see https://wiki.hyprland.org/Configuring/Variables/
      input {
          kb_layout = us
          kb_variant = de_se_fi
          kb_model =
          kb_options = caps:escape
          kb_rules =

          follow_mouse = 1

          touchpad {
              natural_scroll = no
          }

          sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
      }

      general {
          # See https://wiki.hyprland.org/Configuring/Variables/ for more

          gaps_in = 5
          gaps_out = 20
          border_size = 2
          col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
          col.inactive_border = rgba(595959aa)

          layout = dwindle
      }

      decoration {
          # See https://wiki.hyprland.org/Configuring/Variables/ for more

          rounding = 10
          # blur = yes
          # blur_size = 3
          # blur_passes = 1
          # blur_new_optimizations = on

          drop_shadow = yes
          shadow_range = 4
          shadow_render_power = 3
          col.shadow = rgba(1a1a1aee)
      }

      animations {
          enabled = yes

          # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

          bezier = myBezier, 0.05, 0.9, 0.1, 1.05

          animation = windows, 1, 7, myBezier
          animation = windowsOut, 1, 7, default, popin 80%
          animation = border, 1, 10, default
          animation = borderangle, 1, 8, default
          animation = fade, 1, 7, default
          animation = workspaces, 1, 6, default
      }

      dwindle {
          # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
          pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
          preserve_split = yes # you probably want this
      }

      master {
          # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
          new_is_master = true
      }

      gestures {
          # See https://wiki.hyprland.org/Configuring/Variables/ for more
          workspace_swipe = off
      }

      # Example per-device config
      # See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
      device:epic-mouse-v1 {
          sensitivity = -0.5
      }

      # Example windowrule v1
      # windowrule = float, ^(kitty)$
      # Example windowrule v2
      # windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
      # See https://wiki.hyprland.org/Configuring/Window-Rules/ for more


      # See https://wiki.hyprland.org/Configuring/Keywords/ for more
      $mainMod = SUPER

      # Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
      bind = $mainMod, Return, exec, kitty
      bind = $mainMod_SHIFT, C, killactive,
      bind = $mainMod, Q, exit,
      bind = $mainMod, E, exec, dolphin
      #bind = $mainMod, V, togglefloating,
      bind = $mainMod, P, exec, wofi --show drun
      #bind = $mainMod, P, pseudo, # dwindle
      #bind = $mainMod, J, togglesplit, # dwindle

      # Move focus with mainMod + arrow keys
      bind = $mainMod, left, movefocus, l
      bind = $mainMod, right, movefocus, r
      bind = $mainMod, J, movefocus, l
      bind = $mainMod, K, movefocus, r
      bind = $mainMod, up, movefocus, u
      bind = $mainMod, down, movefocus, d

      # Switch workspaces with mainMod + [0-9]
      # bind = $mainMod, 1, workspace, 1
      # bind = $mainMod, 2, workspace, 2
      # bind = $mainMod, 3, workspace, 3
      # bind = $mainMod, 4, workspace, 4
      # bind = $mainMod, 5, workspace, 5
      # bind = $mainMod, 6, workspace, 6
      # bind = $mainMod, 7, workspace, 7
      # bind = $mainMod, 8, workspace, 8
      # bind = $mainMod, 9, workspace, 9
      # bind = $mainMod, 0, workspace, 10

      bind = $mainMod, 1, exec, hyprsome workspace 1
      bind = $mainMod, 2, exec, hyprsome workspace 2
      bind = $mainMod, 3, exec, hyprsome workspace 3
      bind = $mainMod, 4, exec, hyprsome workspace 4
      bind = $mainMod, 5, exec, hyprsome workspace 5
      bind = $mainMod, 6, exec, hyprsome workspace 6
      bind = $mainMod, 7, exec, hyprsome workspace 7
      bind = $mainMod, 8, exec, hyprsome workspace 8
      bind = $mainMod, 9, exec, hyprsome workspace 9

      # Move active window to a workspace with mainMod + SHIFT + [0-9]
      bind = $mainMod SHIFT, 1, movetoworkspace, 1
      bind = $mainMod SHIFT, 2, movetoworkspace, 2
      bind = $mainMod SHIFT, 3, movetoworkspace, 3
      bind = $mainMod SHIFT, 4, movetoworkspace, 4
      bind = $mainMod SHIFT, 5, movetoworkspace, 5
      bind = $mainMod SHIFT, 6, movetoworkspace, 6
      bind = $mainMod SHIFT, 7, movetoworkspace, 7
      bind = $mainMod SHIFT, 8, movetoworkspace, 8
      bind = $mainMod SHIFT, 9, movetoworkspace, 9
      bind = $mainMod SHIFT, 0, movetoworkspace, 10

      # Scroll through existing workspaces with mainMod + scroll
      bind = $mainMod, mouse_down, workspace, e+1
      bind = $mainMod, mouse_up, workspace, e-1

      bind = $mainMod, N, exec, hyprsome workspace $(echo $(($(hyprctl activeworkspace | head -n1 | awk '{print $3}') + 1)) | tail -c2)
      bind = $mainMod, V, exec, hyprsome workspace $(echo $(($(hyprctl activeworkspace | head -n1 | awk '{print $3}') - 1)) | tail -c2)

      bind = $mainMod, comma, focusmonitor, 1
      bind = $mainMod, period, focusmonitor, 0

      # Move/resize windows with mainMod + LMB/RMB and dragging
      bindm = $mainMod, mouse:272, movewindow
      bindm = $mainMod, mouse:273, resizewindow
    '';
  };

  gtk = {
    enable = true;
    cursorTheme = {
      # package = pkgs.bibata-cursors;
      # name = "Bibata-Modern-Ice";
      package = pkgs.callPackage ./derivatives/touhou-cursors.nix {};
      name = "Reimu";
    };
    theme = {
      package = pkgs.tokyo-night-gtk;
      name = "Tokyonight-Storm-B";
    };
  };

  home.pointerCursor = {
    x11.enable = true;
    x11.defaultCursor = "X_cursor";
    # package = pkgs.bibata-cursors;
    # name = "Bibata-Original-Amber";

    package = pkgs.callPackage ./derivatives/touhou-cursors.nix {};
    name = "Reimu";
    gtk.enable = true;
  };

  programs.kitty = {
    enable = true;
    extraConfig = ''
      font_family JetBrainsMono Nerd Font
      font_size 16
    '';
    settings = {
      foreground = "#${config.colorScheme.colors.base05}";
      background = "#${config.colorScheme.colors.base00}";
      window_padding_width = 10;
      font_family = "Cascadia Code";
      font_size = 18;
      confirm_os_window_close = 0;
      enable_audio_bell = "no";
    };
  };

  nixpkgs = {
    ## You can add overlays here
    #overlays = [
    ## If you want to use overlays exported from other flakes:
    ## neovim-nightly-overlay.overlays.default
    #
    ## Or define it inline, for example:
    ## (final: prev: {
    ##   hi = final.hello.overrideAttrs (oldAttrs: {
    ##     patches = [ ./change-hello-to-hi.patch ];
    ##   });
    ## })
    #];
    ## Configure your nixpkgs instance
    config = {
      ## Disable if you don't want unfree packages
      allowUnfree = true;
      ## Workaround for https://github.com/nix-community/home-manager/issues/2942
      allowUnfreePredicate = _: true;
    };
  };

  home = {
    username = "kiipuri";
    homeDirectory = "/home/kiipuri";
  };

  xdg.configFile = {
    lf = {
      source = ./config/lf;
      recursive = true;
    };
    awesome = {
      source = ./config/awesome;
      recursive = true;
    };
    rofi = {
      source = ./config/rofi;
      recursive = true;
    };
    picom = {
      source = ./config/picom;
      recursive = true;
    };
    dunst = {
      source = ./config/dunst;
      recursive = true;
    };
  };

  xdg.desktopEntries.discord = {
    name = "Discord";
    genericName = "All-in-one cross-platform voice and text chat for gamers";
    exec = "discord --disable-gpu-sandbox";
    categories = ["Network" "InstantMessaging"];
    icon = "discord";
    mimeType = ["x-scheme-handler/discord"];
    type = "Application";
  };

  programs.home-manager.enable = true;
  programs.git = {
    enable = true;
    userName = "kiipuri";
    userEmail = "kiipuri@proton.me";
  };

  # Nicely reload system units when changing configs
  systemd.user.startServices = "sd-switch";

  systemd.user.services.autorun = {
    Install.WantedBy = ["graphical-session.target"];
    Unit.PartOf = ["graphical-session.target"];
    Service = {
      ExecStart = "${pkgs.writeShellScript "autorun-start" ''
        # ${pkgs.copyq}/bin/copyq &
        # ${pkgs.feh}/bin/feh --randomize --bg-scale /home/kiipuri/wallpapers --no-fehbg &
        # ${pkgs.iproute2}/bin/ifstat -t 1 -d 1 &
        ${pkgs.swaybg}/bin/swaybg -i $(cd ~/wallpapers && ${pkgs.coreutils}/bin/ls | ${pkgs.coreutils}/bin/shuf | ${pkgs.coreutils}/bin/head -n1 | ${pkgs.findutils}/bin/xargs ${pkgs.coreutils}/bin/realpath) -m stretch &

      ''}";
      ExecStop = "${pkgs.writeShellScript "autorun-stop" ''
        # ${pkgs.copyq}/bin/copyq exit
        ${pkgs.procps}/bin/pkill ${pkgs.iproute2}/bin/ifstat
        ${pkgs.procps}/bin/pkill ${pkgs.swaybg}/bin/swaybg
      ''}";
    };
  };

  # https://nixos.wiki/wiki/FAQ/When_do_I_update_stateVersion
  home.stateVersion = "23.05";
}
